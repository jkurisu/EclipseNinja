<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.eclipseninja</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<artifactId>com.eclipseninja.archimedes.application.target</artifactId>
	<packaging>pom</packaging>

	<name>Eclipse Ninja Application Target</name>
	<description>Eclipse Ninja Application Target Project.</description>
	
	<properties>
		<eclipse.home>/Applications/eclipse/4.2ScalaIDE/eclipse</eclipse.home>
		<equinox.launcher.version>1.3.0.v20120522-1813</equinox.launcher.version>
		<spring.version>3.1.2.RELEASE</spring.version>
	</properties>


	<build>
		<plugins>

			<plugin>
				<groupId>org.eclipse.tycho.extras</groupId>
				<artifactId>tycho-p2-extras-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>publish-features-and-bundles</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<compress>false</compress>
					<!-- additional arguments example <additionalArgs>-configs win32.win32.x86</additionalArgs> -->
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.basedir}/target/source/plugins</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/bundles</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Additional two build plug-ins that allow to also build this project 
				from the command line -->
			<!-- Copying an artifact to location ${project.basedir}/target/source/plugins 
				is only one way how to create content to be published. Any other source of 
				bundles and/or features can be used to be published as long as it end up 
				in ${project.basedir}/target/source/plugins and or ~/features The publisher 
				will use every content that is located in this directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<executions>
					<execution>
						<id>copy-bundles-for-publishing</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.mockito</groupId>
									<artifactId>mockito-all</artifactId>
									<version>1.9.0</version>
								</artifactItem>
								<artifactItem>
									<groupId>log4j</groupId>
									<artifactId>log4j</artifactId>
									<version>1.2.17</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-api</artifactId>
									<version>1.6.6</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.slf4j</groupId>
									<artifactId>slf4j-log4j12</artifactId>
									<version>1.6.6</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-core</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-context</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-expression</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-test</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-aop</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-beans</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.springframework</groupId>
									<artifactId>spring-asm</artifactId>
									<version>${spring.version}</version>
								</artifactItem>
								<artifactItem>
									<groupId>org.apache.servicemix.bundles</groupId>
									<artifactId>org.apache.servicemix.bundles.aopalliance</artifactId>
									<version>1.0_6</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.basedir}/target/source/plugins</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>archive-repository</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>archimedes.target</file>
									<type>target</type>
									<classifier>archimedes</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>
								<java
									jar="${eclipse.home}/plugins/org.eclipse.equinox.launcher_${equinox.launcher.version}.jar"
									fork="true">
									<arg
										line="-application org.eclipse.equinox.p2.publisher.CategoryPublisher" />
									<arg line="-metadataRepository file:/${basedir}/target/repository" />
									<arg line="-artifactRepository file:/${basedir}/target/repository" />
									<arg line="-categoryDefinition file:/${basedir}/category.xml" />
									<arg line="-categoryQualifier" />
									<!-- <arg line="-compress" /> -->
								</java>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.5.v20120716</version>
				<configuration>
					<webAppSourceDirectory>${basedir}/target/repository</webAppSourceDirectory>
					<!-- <daemon>true</daemon> -->
					<webAppConfig>
						<contextPath>/update</contextPath>
					</webAppConfig>
					<systemProperties>
						<systemProperty>
							<name>jetty.port</name>
							<value>9090</value>
						</systemProperty>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>